def process_files(title, file_types, action, min_files=1):
    """
    General function to process files for different operations.

    :param title: Menu title to display.
    :param file_types: List of file extensions to filter.
    :param action: Function to execute on selected files.
    :param min_files: Minimum number of files required for the operation.
    """
    clear_console()
    print_title(title.upper())
    raw_files = list_files(file_types)
    if not raw_files:
        print(f"No {', '.join(file_types)} files found")
        sleep(3)
        return
    for i, file in enumerate(raw_files, start=1):
        print(f"{i}. {shorten_filename(file, 50)}")
    line = term.get_location()[0]
    try:
        while True:
            input_range = user_input_range(
                f"Enter file number(s) to process [e.g., 1,3-5]: ",
                [i for i in range(len(raw_files))]
            )
            if input_range:
                selected_files = [raw_files[i] for i in input_range if 0 <= i < len(raw_files)]
                if len(selected_files) >= min_files:
                    action(selected_files)
                else:
                    print(f"Enter at least {min_files} file(s) to proceed.")
                    sleep(3)
                    rewrite_console_line(line)
            else:
                print("No files selected.")
                sleep(3)
    except BreakLoop:
        pass

def user_interaction(action: int = 1) -> None:
    while True:
        clear_console()
        print_title()
        print_menu([])
        op = user_input_option("Choose an option to start: ")
        if op == 1:
            clear_console()
            print_title(MENUS[0].upper())
            raw_files = list_files(["png","jpeg","jpg","docx","ppt"])
            if not raw_files:
                print("No convertable files found")
                sleep(3)
                pass
            for i, file in enumerate(raw_files, start=1):
                print(f"{i}. {shorten_filename(file, 50)}")
            line = term.get_location()[0]
            try:
                while True:
                    input_range = user_input_range("Enter file number(s) to convert [eg: 1,3-5]: ",[i for i in range(len(raw_files))])
                    if input_range:
                        convert_and_compress_files([raw_files[i] for i in input_range if 0 <= i < len(raw_files)])
                    else:
                        print("Enter at least 1 file to compress")
            except BreakLoop:
                pass
        elif op == 2:
            clear_console()
            print_title(MENUS[1].upper())
            raw_files = list_files(["pdf"])
            if not raw_files:
                print("No pdf files found")
                sleep(3)
                pass
            for i, file in enumerate(raw_files, start=1):
                print(f"{i}. {shorten_filename(file, 50)}")
            line = term.get_location()[0]
            try:
                while True:
                    input_range = user_input_range("Enter file number(s) to convert [eg: 1,3-5]: ",[i for i in range(len(raw_files))])
                    if input_range:
                        merge_pdfs([raw_files[i] for i in input_range if 0 <= i < len(raw_files)])
                    else:
                        print("Enter at least 2 pdf to merge")
                        sleep(3)
                        rewrite_console_line(line)
            except BreakLoop:
                pass

        elif op == 3:
            clear_console()
            print_title(MENUS[2].upper())
            raw_files = list_files(["pdf"])
            if not raw_files:
                print("No pdf files found")
                sleep(3)
                pass
            for i, file in enumerate(raw_files, start=1):
                print(f"{i}. {shorten_filename(file, 50)}")
            line = term.get_location()[0]
            try:
                while True:
                    input_range = user_input_range("Enter file number(s) to convert [eg: 1,3-5]: ",[i for i in range(len(raw_files))])
                    if input_range:
                        compress_pdfs([raw_files[i] for i in input_range if 0 <= i < len(raw_files)])
                    else:
                        print("Enter atleast 1 pdf to compress")
                        sleep(3)
                        rewrite_console_line(line)
            except BreakLoop:
                pass
        elif op == 4:
            clear_console()
            print_title(MENUS[3].upper())
            raw_files = list_files(["pdf"])
            if not raw_files:
                print("No pdf files found")
                sleep(3)
                pass
            for i, file in enumerate(raw_files, start=1):
                print(f"{i}. {shorten_filename(file, 50)}")
            line = term.get_location()[0]
            try:
                while True:
                    input_range = user_input_range("Enter file number(s) to convert [eg: 1,3-5]: ",[i for i in range(len(raw_files))])
                    if input_range:
                        split_pdf([raw_files[i] for i in input_range if 0 <= i < len(raw_files)])
                    else:
                        print("Enter at least 1 page to split")
                        sleep(3)
                        rewrite_console_line(line)
            except BreakLoop:
                pass